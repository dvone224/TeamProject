<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.smartReciFit.mybatis.recipe.RecipeMapper">
	<insert id="insertRecipe" parameterType="recipe">
		insert into recipe
		values(null,#{recipeName},#{recipeMealSize},#{recipeIngredient},#{recipeSeasoning},#{recipeManual},#{recipeThumbnail});
	</insert>

	<insert id="insertApiRecipe" parameterType="apiRecipe">
		insert into
		api_recipe
		values(#{recipeNum},#{apiRecipeNum}, null)
	</insert>

	<insert id="insertTag" parameterType="recipe">
		insert into tag
		values(#{recipeNum},#{recipeType},#{eatTime},#{ingredients},#{cookingStyle},#{cookingMethods})
	</insert>
	
	<insert id="insertAiRecipe" parameterType="aiRecipe">
		INSERT INTO ai_recipe
		VALUES(#{recipeNum},#{aiRecipeUrl},#{recipeManualTimeStamp},#{aiRecipeBoolean})
	</insert>
	
	
	<!--명보가 추가함 레시피등록할 때 쓰려고-->
	<insert id="insertUserRecipe" parameterType="map">
    INSERT INTO user_recipe (recipe_num, user_num, user_recipe_img)
    VALUES (#{recipeNum}, #{userNum}, #{userRecipeImg})
	</insert>

	<resultMap type="recipe" id="recipeResultMap">
		<!-- Recipe 클래스의 공통 필드 매핑 -->
		<id property="recipeNum" column="recipe_num" />
		<result property="recipeName" column="recipe_name" />
		<result property="recipeIngredient" column="recipe_ingredient" />
		<result property="recipeSeasoning" column="recipe_seasoning" />
		<result property="recipeManual" column="recipe_manual" />
		<result property="recipeThumbnail" column="recipe_thumbnail" />

		<!-- Enum 타입 매핑 -->
		<association property="recipeType"
			javaType="kr.smartReciFit.model.recipe.tags.RecipeType">
			<result property="recipeType" column="tag_recipe_type" />
		</association>
		<association property="eatTime"
			javaType="kr.smartReciFit.model.recipe.tags.EatTime">
			<result property="eatTime" column="tag_eat_time" />
		</association>
		<association property="cookingStyle"
			javaType="kr.smartReciFit.model.recipe.tags.CookingStyle">
			<result property="cookingStyle" column="tag_cooking_style" />
		</association>

		<!-- Set<String> 타입 필드 매핑 -->
		<collection property="cookingMethods" ofType="string">
			<result column="tag_cooking_method" />
		</collection>
		<collection property="ingredients" ofType="string">
			<result column="tag_ingredient" />
		</collection>
	</resultMap>

	<resultMap type="apiRecipe" id="ApiRecipeResultMap"
		extends="recipeResultMap">

		<!-- ApiRecipe 클래스의 고유 필드 매핑 -->
		<result property="apiRecipeNum" column="api_recipe_num" />
		<result property="apiRecipeImg" column="api_recipe_img" />
	</resultMap>
	
	<resultMap type="aiRecipe" id="AiRecipeResultMap"
		extends="recipeResultMap">

		<!-- AiRecipe 클래스의 고유 필드 매핑 -->
		<result property="aiRecipeUrl" column="ai_recipe_url" />
		<result property="recipeManualTimeStamp" column="recipe_manual_timeStamp" />
		<result property="aiRecipeBoolean" column="ai_recipe_boolean" />
	</resultMap>

	<update id="updateEnumTag" parameterType="HashMap">
		update tag
		set
		tag_eat_time = #{tagEatTime}, tag_cooking_style = #{tagCookingStyle}
		where tag_recipe_id = #{tagRecipeId}
	</update>

	<select id="getApiRecipeListByLimit" parameterType="int"
		resultMap="ApiRecipeResultMap">
		SELECT *
		FROM recipe r
		INNER JOIN api_recipe ar
		ON
		r.recipe_num= ar.recipe_num
		INNER JOIN tag t
		ON t.tag_recipe_id =
		r.recipe_num
		LIMIT
		${limit};
	</select>

	<select id="getEnumTag" resultType="HashMap">
		select tag_recipe_id,
		tag_eat_time, tag_cooking_style
		from tag
	</select>

	<select id="getRecipeListByFilter" parameterType="HashMap"
		resultMap="recipeResultMap">
		SELECT *
		FROM recipe r
		INNER JOIN api_recipe ar
		ON r.recipe_num=
		ar.recipe_num
		INNER JOIN tag t
		ON t.tag_recipe_id = r.recipe_num
		<where>
			<if test="cookingMethods.size != 0">
				AND (
				<foreach collection="cookingMethods" item="item"
					separator=" OR ">
					JSON_CONTAINS(tag_cooking_method, JSON_QUOTE(#{item}))
				</foreach>
				)
			</if>
			<if test="ingredients.size != 0">
				AND (
				<foreach collection="ingredients" item="item"
					separator=" OR ">
					JSON_CONTAINS(tag_ingredient, JSON_QUOTE(#{item}))
				</foreach>
				)
			</if>
			<if test="eatTimes.size != 0">
				AND tag_eat_time IN
				<foreach collection="eatTimes" item="item" open="("
					separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="cookingStyles.size != 0">
				AND tag_cooking_style IN
				<foreach collection="cookingStyles" item="item" open="("
					separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
	</select>

	<update id="updateThumbnail" parameterType="HashMap">
		UPDATE recipe r
		INNER
		JOIN api_recipe ar
		ON r.recipe_num = ar.recipe_num
		SET recipe_thumbnail
		= #{thumbnail}
		WHERE api_recipe_num = #{apiRecipeNum} and recipe_name =
		#{recipeName}
	</update>

	<update id="updateImg" parameterType="HashMap">
		UPDATE api_recipe ar
		INNER
		JOIN recipe r
		ON r.recipe_num = ar.recipe_num
		SET api_recipe_img =
		#{apiRecipeImg}
		WHERE api_recipe_num = #{apiRecipeNum} and recipe_name
		= #{recipeName}
	</update>

	<select id="getRecipeByRecipeNum" parameterType="int"
		resultMap="ApiRecipeResultMap">
		SELECT *
		FROM recipe r
		INNER JOIN api_recipe ar
		ON
		r.recipe_num=
		ar.recipe_num
		INNER JOIN tag t
		ON t.tag_recipe_id =
		r.recipe_num
		WHERE
		r.recipe_num = #{recipeNum}
	</select>

	<select id="getRecipeByNum" parameterType="int"
		resultMap="recipeResultMap">
		SELECT *
		FROM recipe r
		INNER JOIN tag t
		ON r.recipe_num = t.tag_recipe_id
		WHERE recipe_num = ${recipeNum}
	</select>
	
	<select id="getAiRecipeByUrl" parameterType="String" resultMap="AiRecipeResultMap">
		SELECT *
		FROM recipe r
		INNER JOIN ai_recipe ar
		ON
		r.recipe_num=
		ar.ai_recipe_num
		INNER JOIN tag t
		ON t.tag_recipe_id =
		r.recipe_num
		WHERE
		ai_recipe_url = #{url}
	</select>
	
	<select id="getLastInsertedId" resultType="int">
        SELECT LAST_INSERT_ID()
    </select>
    
    <select id="getRecipeByStartEnd" parameterType="HashMap" resultMap="recipeResultMap">
    	SELECT *
		FROM recipe r
		INNER JOIN tag t
		ON r.recipe_num = t.tag_recipe_id
		ORDER BY r.recipe_num
		LIMIT #{limit} OFFSET #{start};
    </select>
    
    <select id="getRecipeCount" resultType="int">
    	SELECT COUNT(*)
		FROM recipe;
    </select>
    
    <delete id="deleteRecipeByRecipeNum" parameterType="int">
    	DELETE FROM recipe
    	WHERE recipe_num = #{recipeNum}
    </delete>
</mapper>